# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    locale: en
    container.autowiring.strict_mode: true

    secret: '%env(NOTES_SECRET_TOKEN)%'

    database_host: '%env(NOTES_DATABASE_HOST)%'
    database_port: '%env(NOTES_DATABASE_PORT)%'
    database_name: '%env(NOTES_DATABASE_NAME)%'
    database_user: '%env(NOTES_DATABASE_USER)%'
    database_password: '%env(NOTES_DATABASE_PASSWORD)%'

    mailer_transport: smtp
    mailer_host: '%env(NOTES_MAILER_HOST)%'
    mailer_port: '%env(NOTES_MAILER_PORT)%'
    mailer_user: '%env(NOTES_MAILER_USER)%'
    mailer_password: '%env(NOTES_MAILER_PASSWORD)%'

    dropbox_token: '%env(NOTES_DROPBOX_TOKEN)%'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Helper,Repository,Tests,View}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Service\BackupService:
        arguments:
            $environment: '%kernel.environment%'
            $workDirectory: '%kernel.project_dir%'
            $databaseName: '%database_name%'
            $databaseHost: '%database_host%'
            $databasePort: '%database_port%'
            $databaseUser: '%database_user%'
            $databasePassword: '%database_password%'
            $dropboxToken: '%dropbox_token%'
        public: true

    AppBundle\Service\Serializer\DateTimeNormalizer:
        class: AppBundle\Service\Serializer\DateTimeNormalizer
        tags:
            - { name: serializer.normalizer }
